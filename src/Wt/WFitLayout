// This may look like C code, but it's really -*- C++ -*-
/*
 * Copyright (C) 2008 Emweb bv, Herent, Belgium.
 *
 * See the LICENSE file for terms of use.
 */
#ifndef WFIT_LAYOUT_H_
#define WFIT_LAYOUT_H_

#include <Wt/WLayout>
#include <Wt/WGridLayout>

namespace Wt {

/*! \class WFitLayout Wt/WFitLayout Wt/WFitLayout
 *  \brief A layout manager which spans a single widget to all available space.
 *
 * This layout manager may manage only a single child widget, and sizes that
 * widget so that it uses all space available in the parent.
 */
class WT_API WFitLayout : public WLayout
{
public:
  /*! \brief Creates a new fit layout.
   */
  WFitLayout(WWidget *parent = 0);
  ~WFitLayout();

  static void fitWidget(WContainerWidget *container, WWidget *widget);

  virtual void addItem(WLayoutItem *);
  virtual void removeItem(WLayoutItem *);
  virtual WLayoutItem *itemAt(int index) const;
  virtual int indexOf(WLayoutItem *item) const;
  virtual int count() const;
  virtual void clear();

  Impl::Grid& grid() { return grid_; }

private:
  Impl::Grid grid_;
};

}

#endif // WFIT_LAYOUT_H_
